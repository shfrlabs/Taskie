<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AboutApp.Text" xml:space="preserve">
    <value>Thanks for supporting me. Taskie is one of my first projects, which I poured a lot of love into. You can check out my other projects on GitHub. I hope you like Taskie. Best wishes from Poland!</value>
  </data>
  <data name="AboutCategory" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="AddTaskBox.PlaceholderText" xml:space="preserve">
    <value>Add task...</value>
  </data>
  <data name="AdvertTag.Text" xml:space="preserve">
    <value>Your quick and private task companion.</value>
  </data>
  <data name="AdvertUWPTag.Text" xml:space="preserve">
    <value>Made with UWP.</value>
  </data>
  <data name="AppearanceCategory" xml:space="preserve">
    <value>Appearance</value>
  </data>
  <data name="AppearanceText.Text" xml:space="preserve">
    <value>Appearance</value>
  </data>
  <data name="AppThemeSubText.Text" xml:space="preserve">
    <value>Change app theme</value>
  </data>
  <data name="AppThemeText.Text" xml:space="preserve">
    <value>Theme</value>
  </data>
  <data name="AuthDescription.Text" xml:space="preserve">
    <value>Make the app ask for your password/pin/biometrics via Windows Hello. This option may not be avialable if your computer doesn't have a password.</value>
  </data>
  <data name="AuthDisabledDescription" xml:space="preserve">
    <value>You might have removed biometrics or password, your administrator removed the option or something else happened. Check Windows Settings.</value>
  </data>
  <data name="AuthDisabledTitle" xml:space="preserve">
    <value>Authentication has been turned off.</value>
  </data>
  <data name="AuthText.Text" xml:space="preserve">
    <value>Use authentication</value>
  </data>
  <data name="BackupHeader.Text" xml:space="preserve">
    <value>Back up</value>
  </data>
  <data name="BackupsCategory" xml:space="preserve">
    <value>Backups</value>
  </data>
  <data name="BackupsText.Text" xml:space="preserve">
    <value>Backups</value>
  </data>
  <data name="BackupText.Text" xml:space="preserve">
    <value>Export all lists with one click below. To export one list, right-click it and choose Export or use the three-dot menu after opening it. Attachments are not included in exports.</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="CompactOverlayButton.ToolTipService.ToolTip" xml:space="preserve">
    <value>Open Taskie Mini</value>
  </data>
  <data name="DarkThemeRadio.Content" xml:space="preserve">
    <value>Dark</value>
  </data>
  <data name="DeleteList.Text" xml:space="preserve">
    <value>Delete list</value>
  </data>
  <data name="DeleteTask.Text" xml:space="preserve">
    <value>Delete task</value>
  </data>
  <data name="ExportButton.Text" xml:space="preserve">
    <value>Export</value>
  </data>
  <data name="ExportList.Text" xml:space="preserve">
    <value>Export</value>
  </data>
  <data name="GitHubLink.Content" xml:space="preserve">
    <value>GitHub</value>
  </data>
  <data name="ImportButton.Text" xml:space="preserve">
    <value>Import</value>
  </data>
  <data name="LightThemeRadio.Content" xml:space="preserve">
    <value>Light</value>
  </data>
  <data name="ListName" xml:space="preserve">
    <value>List name</value>
  </data>
  <data name="LoginMessage" xml:space="preserve">
    <value>Log into Taskie with Windows Hello. You can turn this off in Settings.</value>
  </data>
  <data name="NewList" xml:space="preserve">
    <value>New list</value>
  </data>
  <data name="NewListBtn.Text" xml:space="preserve">
    <value>New list</value>
  </data>
  <data name="RenameList.Text" xml:space="preserve">
    <value>Rename list</value>
  </data>
  <data name="RenameTask.Text" xml:space="preserve">
    <value>Rename</value>
  </data>
  <data name="RestartButton.Text" xml:space="preserve">
    <value>Restart</value>
  </data>
  <data name="RestartWarning.Text" xml:space="preserve">
    <value>This requires restarting the app.</value>
  </data>
  <data name="RestoreHeader.Text" xml:space="preserve">
    <value>Restore</value>
  </data>
  <data name="RestoreText.Text" xml:space="preserve">
    <value>Import one list (*.json) or a full backup (*.taskie) into the app here. If a list exists, it'll be imported with a (2) next to its name.</value>
  </data>
  <data name="SearchBox.PlaceholderText" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="SecurityCategory" xml:space="preserve">
    <value>Security</value>
  </data>
  <data name="SecurityHeader.Text" xml:space="preserve">
    <value>Security</value>
  </data>
  <data name="SettingsText.Text" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="SystemThemeRadio.Content" xml:space="preserve">
    <value>System theme</value>
  </data>
  <data name="TaskName" xml:space="preserve">
    <value>Task name</value>
  </data>
  <data name="TwitterLink.Content" xml:space="preserve">
    <value>Twitter</value>
  </data>
  <data name="ListLimitText.Text" xml:space="preserve">
    <value>Remove 3 list limit</value>
  </data>
  <data name="WinHelloText.Text" xml:space="preserve">
    <value>Secure login with Windows Hello</value>
  </data>
  <data name="IndicatorText.Text" xml:space="preserve">
    <value>Pro indicator</value>
  </data>
  <data name="CloseCO.Text" xml:space="preserve">
    <value>Close the compact overlay to work in this window.</value>
  </data>
  <data name="tipwrongname.Title" xml:space="preserve">
    <value>You can't do that!</value>
  </data>
  <data name="tipwrongname.Subtitle" xml:space="preserve">
    <value>A list with this name already exists.</value>
  </data>
  <data name="ChangeEmoji" xml:space="preserve">
    <value>Change emoji</value>
  </data>
  <data name="ChangeFont" xml:space="preserve">
    <value>Change font</value>
  </data>
  <data name="Exit" xml:space="preserve">
    <value>Exit app</value>
  </data>
  <data name="GetStarted" xml:space="preserve">
    <value>Get started</value>
  </data>
  <data name="DeleteSubTask.Text" xml:space="preserve">
    <value>Delete subtask</value>
  </data>
  <data name="AddSubTaskBox.PlaceholderText" xml:space="preserve">
    <value>Add subtask...</value>
  </data>
  <data name="RenameSubTask.Text" xml:space="preserve">
    <value>Rename subtask</value>
  </data>
  <data name="NoSubTasks.Text" xml:space="preserve">
    <value>No subtasks avialable.</value>
  </data>
  <data name="RenameSubTaskTitle" xml:space="preserve">
    <value>Rename subtask</value>
  </data>
  <data name="NewSubTaskTitle" xml:space="preserve">
    <value>New subtask</value>
  </data>
  <data name="AddReminder.Text" xml:space="preserve">
    <value>Add reminder</value>
  </data>
  <data name="RemoveReminder.Text" xml:space="preserve">
    <value>Remove reminder</value>
  </data>
  <data name="ReminderGreeting" xml:space="preserve">
    <value>Here's your scheduled reminder:</value>
  </data>
  <data name="Welcome1.Text" xml:space="preserve">
    <value>Meet your quick and private to-do companion.</value>
  </data>
  <data name="Welcome2.Text" xml:space="preserve">
    <value>Add your tasks, organize lists and customize the app.</value>
  </data>
  <data name="Welcome3.Text" xml:space="preserve">
    <value>Have fun and be productive!</value>
  </data>
  <data name="EmptyListText.Text" xml:space="preserve">
    <value>Choose or create a list in the sidebar.</value>
  </data>
  <data name="WebsiteLink.Content" xml:space="preserve">
    <value>My website</value>
  </data>
  <data name="Oops" xml:space="preserve">
    <value>Oops!</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="CustomizeList.Text" xml:space="preserve">
    <value>Customize</value>
  </data>
  <data name="ChangeListBackground" xml:space="preserve">
    <value>Change list background</value>
  </data>
  <data name="SetAsBackground" xml:space="preserve">
    <value>Set as background</value>
  </data>
  <data name="CreateListHeader" xml:space="preserve">
    <value>Create a new list</value>
  </data>
  <data name="File" xml:space="preserve">
    <value>{0} File</value>
  </data>
  <data name="NoAttachments.Text" xml:space="preserve">
    <value>No attachments yet.</value>
  </data>
  <data name="UnknownFile" xml:space="preserve">
    <value>Unknown filetype</value>
  </data>
  <data name="FairmarkFile" xml:space="preserve">
    <value>Fairmark note</value>
  </data>
  <data name="AttachNote" xml:space="preserve">
    <value>Attach Fairmark note</value>
  </data>
  <data name="AttachFile" xml:space="preserve">
    <value>Attach file</value>
  </data>
  <data name="AttachNoteButton.Content" xml:space="preserve">
    <value>Attach selected note</value>
  </data>
  <data name="NoNotes" xml:space="preserve">
    <value>No notes found.</value>
  </data>
  <data name="ConnectionFailed" xml:space="preserve">
    <value>Failed to connect to service. Is Fairmark installed?</value>
  </data>
  <data name="Loading" xml:space="preserve">
    <value>Loading...</value>
  </data>
</root>